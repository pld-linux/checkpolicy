Index: checkpolicy/policy_parse.y
===================================================================
RCS file: /nfshome/pal/CVS/selinux-usr/checkpolicy/policy_parse.y,v
retrieving revision 1.11
diff -u -r1.11 policy_parse.y
--- checkpolicy/policy_parse.y	15 Jan 2004 14:23:02 -0000	1.11
+++ checkpolicy/policy_parse.y	15 Jan 2004 17:48:45 -0000
@@ -42,6 +42,7 @@
 static int define_common_base(void);
 static int define_av_base(void);
 static int define_attrib(void);
+static int define_typealias(void);
 static int define_type(int alias);
 static int define_compute_type(int which);
 static int define_te_avtab(int which);
@@ -82,6 +83,7 @@
 %token SID
 %token ROLE
 %token ROLES
+%token TYPEALIAS
 %token TYPE
 %token TYPES
 %token ALIAS
@@ -240,6 +242,7 @@
 			;
 te_decl			: attribute_def
                         | type_def
+                        | typealias_def
                         | transition_def
                         | te_avtab_def
 			;
@@ -251,6 +254,9 @@
 	                | TYPE identifier opt_attr_list ';'
                         {if (define_type(0)) return -1;}
     			;
+typealias_def           : TYPEALIAS identifier alias_def
+			{if (define_typealias()) return -1;}
+			;
 opt_attr_list           : ',' id_comma_list
 			| 
 			;
@@ -1479,6 +1485,61 @@
 	return 0;
 }
 
+static int define_typealias(void)
+{
+	char *id;
+	type_datum_t *t, *aliasdatum;
+	int ret;
+
+
+	if (pass == 2) {
+		while ((id = queue_remove(id_queue))) 
+			free(id);
+		return 0;
+	}
+
+	id = (char *) queue_remove(id_queue);
+	if (!id) {
+		yyerror("no type name for typealias definition?");
+		return -1;
+	}
+
+	t = hashtab_search(policydbp->p_types.table, id);
+	if (!t || t->isattr) {
+		sprintf(errormsg, "unknown type %s", id);
+		yyerror(errormsg);
+		free(id);
+		return -1;
+	}
+
+	while ((id = queue_remove(id_queue))) {
+		aliasdatum = (type_datum_t *) malloc(sizeof(type_datum_t));
+		if (!aliasdatum) {
+			yyerror("out of memory");
+			return -1;
+		}
+		memset(aliasdatum, 0, sizeof(type_datum_t));
+		aliasdatum->value = t->value;
+
+		ret = hashtab_insert(policydbp->p_types.table,
+				     (hashtab_key_t) id, (hashtab_datum_t) aliasdatum);
+
+		if (ret == HASHTAB_PRESENT) {
+			sprintf(errormsg, "name conflict for type alias %s", id);
+			yyerror(errormsg);
+			free(aliasdatum);
+			free(id);
+			return -1;
+		}
+		if (ret == HASHTAB_OVERFLOW) {
+			yyerror("hash table overflow");
+			free(aliasdatum);
+			free(id);
+			return -1;
+		}
+	}
+	return 0;
+}
 
 static int define_type(int alias)
 {
Index: checkpolicy/policy_scan.l
===================================================================
RCS file: /nfshome/pal/CVS/selinux-usr/checkpolicy/policy_scan.l,v
retrieving revision 1.3
diff -u -r1.3 policy_scan.l
--- checkpolicy/policy_scan.l	17 Dec 2003 16:52:20 -0000	1.3
+++ checkpolicy/policy_scan.l	15 Jan 2004 17:33:23 -0000
@@ -46,6 +46,8 @@
 roles				{ return(ROLES); }
 TYPES |
 types				{ return(TYPES); }
+TYPEALIAS |
+typealias			{ return(TYPEALIAS); }
 TYPE |
 type				{ return(TYPE); }
 ALIAS |
